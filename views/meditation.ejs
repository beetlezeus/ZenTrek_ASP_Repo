<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Meditation Page</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <style>
        .header-container {
            background-color: #3498db;
            color: #ffffff;
            padding: 10px;
            text-align: left;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .header-container h1 {
            margin: 0;
        }

        .menu-placeholder {
            width: 100%;
            height: 50px;
            background-color: transparent;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 10px;
        }

        .inner-rectangle {
            margin: auto;
            height: 350px;
            background-color: #ffffff;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
            margin-top: 20px;
        }

        #breathing-container {
            background-color: aliceblue;
        }

        #button-container {
            text-align: center;
            margin-top: 20px;
        }

        #button-container button {
            width: 120px;
            height: 40px;
            margin: 0 10px;
        }

        .oval-button {
            width: 150px;
            height: 60px;
            border-radius: 30px;
            margin-left: auto;
            margin-top: 20px;
            cursor: pointer;
        }

        .centered-content {
            text-align: center;
            margin-top: 50px;
        }

        .Dietcontainer {
            display: flex;
            flex-direction: column;
        }

        .back-button {
            display: block;
            text-align: center;
            margin-top: 20px;
            text-decoration: none;
            color: #ffffff;
            background-color: #3498db;
            padding: 10px 20px;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="Dietcontainer">
        <div class="centered-content">
            <h1>Let's Calm the Body & Mind</h1>
            <p>"Clouds come and go like clouds in a windy sky. Conscious breathing is my anchor."-thich nhat hanh</p>
        </div>
    </div>

    <div class="menu-placeholder">
        <select id="breathing-selector" onchange="changeBreathingAnimation()">
            <option value="meditation1">Meditation- Calm</option>
            <option value="meditation2">Meditation- anxiety attack</option>
            <option value="meditation3">Meditation Technique 3</option>
            <option value="meditation4">Meditation Technique 4</option>
        </select>
    </div>
    
    <div class="inner-rectangle" id="breathing-container"></div>

    <div id="button-container">
        <button id="start-button">Start</button>
        <button id="stop-button">Stop</button>
    </div>
    
    <a href="/home" class="back-button">Back to Home</a>

    <script>
        let scene, camera, renderer, sphere, animationId;
        let radius = 50;
        let inhaleTime = 2000;
        let exhaleTime = 2000;
        let pauseTime = 1000;

        function goBack() {
            window.history.back();
        }

        function init() {
            scene = new THREE.Scene();
            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            camera.position.z = 200;
            renderer = new THREE.WebGLRenderer({ alpha: true }); 
            renderer.setSize(window.innerWidth * 0.6, window.innerHeight * 0.6);
            document.getElementById('breathing-container').appendChild(renderer.domElement);
            let geometry = new THREE.SphereGeometry(radius, 32, 32);
            let material = new THREE.MeshBasicMaterial({ color: 0x3498db, wireframe: true });
            sphere = new THREE.Mesh(geometry, material);
            scene.add(sphere);
            startBreathingAnimation1();
            document.getElementById('start-button').addEventListener('click', startBreathing);
            document.getElementById('stop-button').addEventListener('click', stopBreathing);
        }

        function animate() {
            animationId = requestAnimationFrame(animate);
            sphere.scale.set(
                map(Math.sin(Date.now() / inhaleTime), -1, 1, 1, 1.5),
                map(Math.sin(Date.now() / inhaleTime), -1, 1, 1, 1.5),
                map(Math.sin(Date.now() / inhaleTime), -1, 1, 1, 1.5)
            );
            setTimeout(() => {
                sphere.scale.set(
                    map(Math.sin(Date.now() / exhaleTime), -1, 1, 1.5, 1),
                    map(Math.sin(Date.now() / exhaleTime), -1, 1, 1.5, 1),
                    map(Math.sin(Date.now() / exhaleTime), -1, 1, 1.5, 1)
                );
            }, pauseTime);
            renderer.render(scene, camera);
        }

        function startBreathing() {
            if (!animationId) {
                animate();
            }
        }

        function stopBreathing() {
            if (animationId) {
                cancelAnimationFrame(animationId);
                animationId = null;
            }
        }

        function map(value, start1, stop1, start2, stop2) {
            return (value - start1) / (stop1 - start1) * (stop2 - start2) + start2;
        }

        function changeBreathingAnimation() {
            var selector = document.getElementById('breathing-selector');
            var selectedValue = selector.options[selector.selectedIndex].value;

            stopBreathing(); 

            switch (selectedValue) {
                case 'meditation1':
                    startBreathingAnimation1();
                    break;
                case 'meditation2':
                    startBreathingAnimation2();
                    break;
                case 'meditation3':
                    startBreathingAnimation3();
                    break;
                case 'meditation4':
                    startBreathingAnimation4();
                    break;
                default:
                    break;
            }
        }

        function startBreathingAnimation1() {
            inhaleTime = 2000;
            exhaleTime = 2000;
            pauseTime = 1000;
            sphere.material.color.set(0x3498db);
            startBreathing();
        }

        function startBreathingAnimation2() {
            inhaleTime = 10000; 
            holdTime = 5000;    
            exhaleTime = 10000; 
            pauseTime = 800;
            sphere.material.color.set(0xff5733);
            startBreathingWithHold();
        }

        function startBreathingAnimation3() {
            inhaleTime = 10000; 
            holdTime = 5000;  
            exhaleTime = 2000;  
            pauseTime = 1200;
            sphere.material.color.set(0x2ecc71);
            startBreathingWithHold();
        }

        function startBreathingWithHold() {
            animate();
            setTimeout(() => {
                setTimeout(() => {
                    exhaleTime -= holdTime; 
                    startBreathing();
                }, holdTime);
            }, inhaleTime);
        }

        function startBreathingAnimation4() {
            inhaleTime = 2500;
            exhaleTime = 1500;
            pauseTime = 2000;
            sphere.material.color.set(0xff00ff);
            startBreathing();
        }

        init();
    </script>
</body>
</html>

