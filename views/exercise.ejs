<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Exercise Page</title>
    <!-- <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
        integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8sh+Wy4L4J/P4pEYI9jJ4IuUJFwG6d5I9w1bC"
        crossorigin="anonymous"> -->
        <!-- <link rel="stylesheet" href="https://css.glass/2/css.min.css"> -->

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>


    <style>
        body {
            /* font-family: "Roboto", sans-serif; */
            background-color: #f8f9fa;
        }
        .log-part {
            display: flex;
            flex-direction: column;
        }
        

        .right-part,
        .left-part {
            flex: 1;
            margin-top: 20px;
        }

        .container {
            margin-top: 50px;
        }
        .flex-container{
           display: flex;
    align-items: center; /* Align items vertically */
        }
        .timer{
            align-items: flex-end;
            margin-left: 10px;

        }
        .category-content {
            background-color: transparent;
            margin-top: 30px;
        }

        .card {
            background-color: transparent;
            border: none;
            box-shadow: none;
            padding: 10px;
            height: 100%;
            flex-direction: column;

        }

        .card-body {
            border-radius: 10px;
            padding: 20px;
            /* From https://css.glass */
            background: rgba(255, 255, 255, 0.33);
            /* From https://css.glass */
            border-radius: 16px;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(13.7px);
            -webkit-backdrop-filter: blur(13.7px);
            border: 1px solid rgba(255, 255, 255, 0.66);
            justify-content: center;

            flex-grow: 1;
        }
        .card-body2{
            /* From https://css.glass */
            background: rgba(89, 159, 228, 0.5);
           
            border-radius: 10px;
            padding: 20px;
            background: rgba(214, 213, 248, 0.31);
            border-radius: 16px;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(18px);
            -webkit-backdrop-filter: blur(18px);
            border: 1px solid rgba(214, 213, 248, 0.66);
        }

        /* .btn  {
            background-color: #180075;
            border: none;
            padding: 4px;
            color: #f8f9fa;
        }
        

        .btn-primary:hover {
            background-color: #0056b3;
        }

        .btn-secondary {
            background-color: #6c757d;
            border: none;
        }


        .btn-secondary:hover {
            background-color: #545b62;
        } */

        .btn{
            color: #f8f9fa;
        }
        .btn:hover{
            color:#f8f9fa
        }
        .log-section{
            display: flex;
            flex-direction: column;
            padding-top: 30px;
        }
        .text{
            align-self: center;
        }
        #yogaCategory{
            overflow: scroll;
        }
        ::-webkit-scrollbar {
  width: 3px;
  background-color: white; /* or add it to the track */
}
::-webkit-scrollbar-thumb {
  background: #0056b3;
}

    </style>
</head>

<body>
    <div class="container">
        <div class="bigcontent card3 card-body">
            <h1 class="text-center">Exercise Page</h1>


            <div class="row mt-5">
                <div class="col-md-4">
                    <div class="card glass">
                        <div class="card-body">
                            <h5 class="card-title">Strength Training</h5>
                            <p class="card-text">Watch training videos to learn exercises with proper form.</p>
                            <button class="btn" onclick="showCategory('strength')">Show</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card glass">
                        <div class="card-body">
                            <h5 class="card-title">Cardio</h5>
                            <p class="card-text">Follow a warm-up guide and choose from different running plans.</p>
                            <button class="btn" onclick="showCategory('cardio')">Show</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card glass">
                        <div class="card-body">
                            <h5 class="card-title">Yoga</h5>
                            <p class="card-text">Follow yoga videos for a relaxing session.</p>
                            <button class="btn" onclick="showCategory('yoga')">Show</button>
                        </div>
                    </div>
                </div>
            </div>

            <div id="strength-category" class="category-content card card-body" style="display: none;">
                <div class="text-container">
                    <div class="text">
                        <h3>Strength Training Resources</h3>
                        <p>Watch training videos to learn exercises with proper form.</p>
                    </div>
                </div>
                <div class="log-part">
                    <div class="right-part">
                        <h3>Strength Training Log</h3>

                        <div class="log-section">
                            <form action="/logStrengthTraining" method="post">
                                <label for="exerciseType">Exercise Type:</label>
                                <input type="text" id="exerciseType" name="exerciseType" required>
                                <label for="numOfReps">Number of Reps:</label>
                                <input type="number" id="numOfReps" name="numOfReps" min="0" required>
                                <button type="submit" class="btn  mt-2">Log Strength Training</button>
                            </form>
                        </div>
                    </div>
            
                    <div class="left-part">
                        <h3>Activity</h3>
                        <div class="exercisebtn">

                            <button id="exerciseButton1" class="btn selected">Exercise 1</button>
                            <button id="exerciseButton2" class="btn">Exercise 2</button>
                        </div>
                        <div class="card3 card-body2">
                            <div>
                                <div id="strengthCategory">Strength</div>
                            </div>
                            <div class="flex-container">
                               
                                <button class="startbutton btn" id="startButton1" onclick="toggleExercise('timer1', 'startButton1')">Start Exercise</button>
                                <div id="timer1" class="timer"></div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="cardio-category" class="category-content card card-body" style="display: none;">
                <div class="text-container">
                    <div class="text">
                        <h3>Cardio Resources</h3>
                        <p>Follow a warm-up guide and choose from different running plans.</p>
                    </div>
                </div>
                <div class="log-part">
                    <div class="right-part">
                        <h3>Cardio Log</h3>

                        <div class="log-section">
                            <form action="/logCardio" method="post">
                                <label for="runningStats">Running Stats:</label>
                                <input type="text" id="runningStats" name="runningStats" required>
                                <button type="submit" class="btn btn-primary mt-2">Log Cardio</button>
                            </form>
                        </div>
                    </div>
                  
                    <div class="left-part">
                        <h3>Activity</h3>
                        <div class="exercisebtn">
                            <button id="cardioButton1" class="btn">Exercise 1</button>
                            <button id="cardioButton2" class="btn">Exercise 2</button>
                        </div>

                        <div class="card3 card-body2">
                            <div>
                                <div id="cardioCategory">Cardio</div>
                            </div>
                            <div class="flex-container">
                                <div class="image">
                                </div>
                                <button class="startbutton btn" id="startButton2" onclick="toggleExercise('timer2', 'startButton2')">Start Exercise</button>
                                <div id="timer2" class="timer"></div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="yoga-category" class="category-content card card-body" style="display: none;">
                <div class="text-container">
                    <div class="text">
                        <h3>Yoga Resources</h3>
                        <p>Follow yoga videos for a relaxing session.</p>
                    </div>
                </div>
                <div class="log-part">
                    <div class="right-part">
                        <h3>Yoga Log</h3>

                        <div class="log-section">
                            <form action="/logYoga" method="post">
                                <label for="timeSpent">Time Spent (minutes):</label>
                                <input type="number" id="timeSpent" name="timeSpent" required>
                                <button type="submit" class="btn  mt-2">Log Yoga</button>
                            </form>
                        </div>
                    </div>
                
                    <div class="left-part">
                        <h3>Activity</h3>
                        <div class="exercisebtn">
                            <button id="yogaButton1" class="btn">Exercise 1</button>
                            <button id="yogaButton2" class="btn">Exercise 2</button>
                        </div>

                        <div class="card3 card-body2">
                            <div>
                                <div id="yogaCategory">Yoga</div>
                            </div>
                            <div class="flex-container">
                                <div class="image">
                                </div>
                                <button class="startbutton btn" id="startButton3" onclick="toggleExercise('timer3', 'startButton3')">Start Exercise</button>
                                <div id="timer3" class="timer"></div>

                            </div>
                        </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <a href="/home" class="btn btn-secondary mt-3">Back to Home</a>
    </div>

  


    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
        integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"
        integrity="sha384-eMN0/0w0eWR1Vf+hJxJK6uUpAU3Nj1e6ECqOFJZb6fpEmP93yCb75NAwK8EGI1g"
        crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"
        integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8sh+Wy4L4J/P4pEYI9jJ4IuUJFwG6d5I9w1bC"
        crossorigin="anonymous"></script>
    <script>


  
    function showCategory(category) {
    // Hide all category contents
    var categories = document.querySelectorAll('.category-content');
    categories.forEach(function(cat) {
        cat.style.display = 'none';
    });

    // Show the selected category content
    document.getElementById(category + '-category').style.display = 'block';
}

// Function to handle exercise button click


// Function to fetch and display Exercise 2 data
function showExercise2() {
    // Exercise data for Exercise 2
    const exercise2Data = {
        "name": "Zottman Curl",
        "type": "strength",
        "muscle": "biceps",
        "equipment": "None",
        "difficulty": "intermediate",
        "instructions": "Stand up with your torso upright and a dumbbell in each hand being held at arms length. The elbows should be close to the torso. Make sure the palms of the hands are facing each other. This will be your starting position. While holding the upper arm stationary, curl the weights while contracting the biceps as you breathe out. Only the forearms should move. Your wrist should rotate so that you have a supinated (palms up) grip. Continue the movement until your biceps are fully contracted and the dumbbells are at shoulder level. Hold the contracted position for a second as you squeeze the biceps. Now during the contracted position, rotate your wrist until you now have a pronated (palms facing down) grip with the thumb at a higher position than the pinky. Slowly begin to bring the dumbbells back down using the pronated grip. As the dumbbells close your thighs, start rotating the wrist so that you go back to a neutral (palms facing your body) grip. Repeat for the recommended amount of repetitions."
    };

    // Display Exercise 2 data in the Strengthcategory section
    const strengthCategoryElement = document.getElementById('strengthCategory');
    if (strengthCategoryElement) {
        strengthCategoryElement.innerHTML = `
            <div>Name: ${exercise2Data.name}</div>
            <div>Type: ${exercise2Data.type}</div>
            <div>Muscle: ${exercise2Data.muscle}</div>
            <div>Equipment: ${exercise2Data.equipment}</div>
            <div>Difficulty: ${exercise2Data.difficulty}</div>
            <div>Instructions: ${exercise2Data.instructions}</div>
        `;
    }
}

// Add event listener for Exercise 2 button click
document.getElementById('exerciseButton2').addEventListener('click', showExercise2);
// Function to fetch and display Exercise 1 data
function showExercise1() {
    // Fetch Exercise 1 data from the API
    fetchData('https://api.api-ninjas.com/v1/exercises', 'strengthCategory', { type: 'strength' });
}

// Add event listener for Exercise 1 button click
document.getElementById('exerciseButton1').addEventListener('click', showExercise1);

// Function to fetch and display Exercise 2 data for Yoga category
function showYogaExercise2() {
    // Exercise data for Exercise 2 in Yoga category
    const exercise2Data = {
        "name": "Chin To Chest Stretch",
        "type": "stretching",
        "muscle": "neck",
        "equipment": "None",
        "difficulty": "intermediate",
        "instructions": "Get into a seated position on the floor. Place both hands at the rear of your head, fingers interlocked, thumbs pointing down and elbows pointing straight ahead. Slowly pull your head down to your chest. Hold for 20-30 seconds."
    };

    // Display Exercise 2 data in the Yoga category section
    const yogaCategoryElement = document.getElementById('yogaCategory');
    if (yogaCategoryElement) {
        yogaCategoryElement.innerHTML = `
            <div>Name: ${exercise2Data.name}</div>
            <div>Type: ${exercise2Data.type}</div>
            <div>Muscle: ${exercise2Data.muscle}</div>
            <div>Equipment: ${exercise2Data.equipment}</div>
            <div>Difficulty: ${exercise2Data.difficulty}</div>
            <div>Instructions: ${exercise2Data.instructions}</div>
        `;
    }
}


// Add event listener for Exercise 2 button click in Yoga category
document.getElementById('yogaButton2').addEventListener('click', showYogaExercise2);
function showYogaExercise1() {
    // Fetch Exercise 1 data from the API
    fetchData('https://api.api-ninjas.com/v1/exercises', 'yogaCategory', { type: 'stretching' });
}
document.getElementById('yogaButton1').addEventListener('click', showYogaExercise1);

// Function to fetch and display Exercise 2 data for cardio
function showCardioExercise2() {
    // Exercise data for Exercise 2
    const exerciseCardio2 = {
        "name": "Stair climber",
        "type": "cardio",
        "muscle": "quadriceps",
        "equipment": "machine",
        "difficulty": "intermediate",
        "instructions": "To begin, step onto the stepmill and select the desired option from the menu. You can choose a manual setting, or you can select a program to run. Typically, you can enter your age and weight to estimate the amount of calories burned during exercise. Use caution so that you don’t trip as you climb the stairs. It is recommended that you maintain your grip on the handles so that you don’t fall. Stepmills offer convenience, cardiovascular benefits, and usually have less impact than running outside while offering a similar rate of calories burned. They are typically much harder than other cardio equipment. A 150 lb person will typically burn over 300 calories in 30 minutes, compared to about 175 calories walking."
    };

    // Display Exercise 2 data in the cardio category section
    const cardioCategoryElement = document.getElementById('cardioCategory');
    if (cardioCategoryElement) {
        cardioCategoryElement.innerHTML = `
            <div>Name: ${exerciseCardio2.name}</div>
            <div>Type: ${exerciseCardio2.type}</div>
            <div>Muscle: ${exerciseCardio2.muscle}</div>
            <div>Equipment: ${exerciseCardio2.equipment}</div>
            <div>Difficulty: ${exerciseCardio2.difficulty}</div>
            <div>Instructions: ${exerciseCardio2.instructions}</div>
        `;
    }
}

// Add event listener for Cardio Exercise 2 button click
document.getElementById('cardioButton2').addEventListener('click', showCardioExercise2);

function showCardioExercise1() {
    // Fetch Exercise 1 data from the API
    fetchData('https://api.api-ninjas.com/v1/exercises', 'cardioCategory', { type: 'cardio' });
}
document.getElementById('cardioButton1').addEventListener('click', showCardioExercise1);




function toggleExercise(timerId, startButtonId) {
        var timer = document.getElementById(timerId);
        var startButton = document.getElementById(startButtonId);

        // Check if the timer element and start button exist
        if (timer && startButton) {
            // Start the timer
            var startTime = Date.now(); // Get the current timestamp
            var interval = setInterval(function() {
                var elapsedTime = Date.now() - startTime; // Calculate elapsed time in milliseconds
                var hours = Math.floor(elapsedTime / (1000 * 60 * 60)); // Calculate hours
                var minutes = Math.floor((elapsedTime % (1000 * 60 * 60)) / (1000 * 60)); // Calculate minutes
                var seconds = Math.floor((elapsedTime % (1000 * 60)) / 1000); // Calculate seconds
                var milliseconds = Math.floor((elapsedTime % 1000) / 10); // Calculate milliseconds

                // Format the time components to have leading zeros if necessary
                var formattedTime = ('0' + hours).slice(-2) + ':' +
                                    ('0' + minutes).slice(-2) + ':' +
                                    ('0' + seconds).slice(-2) + '.' +
                                    ('0' + milliseconds).slice(-2);

                // Update the timer display
                timer.textContent = formattedTime;
            }, 10); // Update every 10 milliseconds

            // Change the button text to "Stop Exercise"
            startButton.textContent = "Stop Exercise";

            // Change the button's onclick function to stop the timer
            startButton.onclick = function() {
                clearInterval(interval); // Stop the interval
                startButton.textContent = "Start Exercise"; // Change back the button text
                startButton.onclick = function() {
                    toggleExercise(timerId, startButtonId); // Revert the onclick function to start the timer again
                };
            };
        }
    }

      
        function fetchData(apiEndpoint, targetId, params = {}) {
        const http = new XMLHttpRequest();
        const url = buildApiUrl(apiEndpoint, params);
        http.open("GET", url);
        http.setRequestHeader("X-Api-Key", "3mutvzPWZvZ2vxqGE64jTNGUX0sg2hzz3SoOL6Yl");
        http.onreadystatechange = function () {
            if (http.readyState == 4 && http.status == 200) {
                const result = JSON.parse(http.responseText);
                console.log('API Response:', result);  // Log della risposta API
                const targetElement = document.getElementById(targetId);
                if (targetElement) {
                    targetElement.innerHTML = '';
                }
                if (result && Array.isArray(result)) {
                    const firstExercise = result[0];
                    if (firstExercise) {
                        const exerciseElement = document.getElementById(targetId);
                        if (exerciseElement) {
                            exerciseElement.innerHTML = `
                                <div>Name: ${firstExercise.name || 'N/A'}</div>
                                
                                <div>Type: ${firstExercise.type || 'N/A'}</div>
                                <div>Muscle: ${firstExercise.muscle || 'N/A'}</div>
                                <div>Equipment: ${firstExercise.equipment || 'N/A'}</div>
                                <div>Difficulty: ${firstExercise.difficulty || 'N/A'}</div>
                                <div>Instructions: ${firstExercise.instructions || 'N/A'}</div>
                            `;
							 exerciseElement.style.overflow = 'auto';
                            exerciseElement.style.maxHeight = '150px'; 
                        }
                    }
                } else {
                    if (targetElement) {
                        targetElement.innerHTML = 'No data available';
                    }
                }
                
            }
        };
        http.send();
    }
    function buildApiUrl(apiEndpoint, params) {
        const url = new URL(apiEndpoint);
        for (const [key, value] of Object.entries(params)) {
            if (value !== undefined && value !== null) {
                url.searchParams.append(key, value);
            }
        }
        return url.toString();
    }
console.log(buildApiUrl('https://api.api-ninjas.com/v1/exercises', { type: 'strength' }));
fetchData('https://api.api-ninjas.com/v1/exercises', 'strengthCategory', { type: 'strength' });
fetchData('https://api.api-ninjas.com/v1/exercises', 'exercise1', { type: 'strength' });
fetchData('https://api.api-ninjas.com/v1/exercises', 'cardioCategory', { type: 'cardio' });
fetchData('https://api.api-ninjas.com/v1/exercises', 'exercise2', { type: 'cardio' });
fetchData('https://api.api-ninjas.com/v1/exercises', 'yogaCategory', { type: 'stretching', category: 'stretching' });
fetchData('https://api.api-ninjas.com/v1/exercises', 'exercise3', { type: 'stretching', category: 'stretching' });
    </script>
</body>

</html>
